'use strict'
$(function ($, window, document, undefined) {
  function Plugin (element, options) {
    this.element = element, this.options = $.extend({}, defaults, options), this._defaults = defaults, this._name = pluginName, this.init()
  }

  var pluginName = 'sortpaginate', defaults = {pageSize: 10}
  Plugin.prototype.init = function () {
    function sortTable (table, column, order) {
      var asc = 'asc' === order, tbody = table.find('tbody')
      if (column && order) {
        tbody.find('tr').sort(function (a, b) {
          return asc ? $('td:eq(' + column + ')', a).text().localeCompare($('td:eq(' + column + ')', b).text()) : $('td:eq(' + column + ')', b).text().localeCompare($('td:eq(' + column + ')', a).text())
        }).appendTo(tbody)
      }
    }

    var _$this = $(this.element), _opts = this.options
    _$this.wrap('<div class=\'sp_wrapper\'><div class=\'sp_table\'>'), _$this.parent().after('<div class=\'sp_navigator\'>'), _$this.closest('.sp_wrapper').find('.sp_navigator').append('<span class=\'sp_paginate sp_previous\'><a href=\'\'>上一頁<a/></span>').append('<span class=\'sp_paginate sp_next\'><a href=\'\'>下一頁<a/></span>')
    var paginate = function (start, size) {
      var tableRows = $(_$this).find('tbody tr'), end = start + size
      tableRows.hide(), tableRows.slice(start, end).show(), $(_$this).closest('.sp_wrapper').find('.sp_navigator .sp_paginate').show(), tableRows.eq(0).is(':visible') && $(_$this).closest('.sp_wrapper').find('.sp_navigator .sp_previous').hide(), tableRows.eq(tableRows.length - 1).is(':visible') && $(_$this).closest('.sp_wrapper').find('.sp_navigator .sp_next').hide()
    }
    _$this.find('th').on('click', function () {
      $(_$this).find('th').not($(this)).removeClass('sp_sorted_asc sp_sorted_desc'), $(this).hasClass('sp_sorted_asc') || $(this).hasClass('sp_sorted_desc') ? $(this).toggleClass('sp_sorted_asc sp_sorted_desc') : $(this).addClass('sp_sorted_asc'), $(_$this).find('tbody tr').show(), sortTable($(_$this), $(this).index(), $(this).hasClass('sp_sorted_asc') ? 'asc' : 'desc'), paginate(parseInt($(_$this).find('tbody').attr('data-firstRecord'), 10), _opts.pageSize)
    }), _$this.closest('.sp_wrapper').find('.sp_navigator').on('click', '.sp_paginate', function (e) {
      e.preventDefault()
      var tableRows = $(_$this).find('tbody tr'),
        tmpRec = parseInt($(_$this).find('tbody').attr('data-firstRecord'), 10)
      $(this).hasClass('sp_next') ? tmpRec += _opts.pageSize : tmpRec -= _opts.pageSize, tmpRec < 0 || tmpRec > tableRows.length || ($(_$this).find('tbody').attr('data-firstRecord', tmpRec), paginate(tmpRec, 10))
    }), $(_$this).find('tbody').attr('data-firstRecord', 0), $(_$this).closest('.sp_wrapper').find('.sp_navigator .sp_previous').hide(), $(_$this).closest('.sp_wrapper').find('.sp_navigator .sp_next').show(), _$this.find('th').each(function () {
      var width = $(_$this).width()
      $(_$this).width(width)
    }), $(_$this).find('th').eq(0).addClass('sp_sorted_asc'), sortTable($(_$this)), paginate(parseInt($(_$this).find('tbody').attr('data-firstRecord'), 10), _opts.pageSize)
  }, $.fn[pluginName] = function (options) {
    return this.each(function () {
      $(this).is('table') && ($.data(this, 'plugin_' + pluginName) || $.data(this, 'plugin_' + pluginName, new Plugin(this, options)))
    }), this
  }
})